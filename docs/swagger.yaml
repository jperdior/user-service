basePath: /api/v1
definitions:
  kit.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  presentation.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  presentation.ForgotPasswordResponse:
    properties:
      message:
        type: string
    type: object
  presentation.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  presentation.LoginResponse:
    properties:
      token:
        type: string
    type: object
  presentation.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  presentation.registerUserRequest:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - id
    - name
    - password
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:9091
info:
  contact:
    email: julio.perdiguer@gmail.com
    name: API Support
    url: https://julioperdiguer.es
  description: This is a Golang template API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Golang Template API
  version: "1.0"
paths:
  /forgot-password:
    post:
      consumes:
      - application/json
      description: Sends a password recovery email to the user if the provided email
        exists in the system
      parameters:
      - description: Forgot password request body
        in: body
        name: forgotPasswordRequest
        required: true
        schema:
          $ref: '#/definitions/presentation.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password recovery email sent
          schema:
            $ref: '#/definitions/presentation.ForgotPasswordResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/kit.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/kit.ErrorResponse'
      summary: Send password recovery email
      tags:
      - user
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token if credentials are
        valid
      parameters:
      - description: Login request body
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/presentation.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            $ref: '#/definitions/presentation.LoginResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/kit.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/kit.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/kit.ErrorResponse'
      summary: Authenticates a user with the provided email and password
      tags:
      - user
  /register:
    post:
      consumes:
      - application/json
      description: Registers a new user with the provided name, email, and password
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presentation.registerUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/presentation.UserResponse'
        "400":
          description: 'Invalid input" example {"error": "invalid input"}'
          schema:
            $ref: '#/definitions/kit.ErrorResponse'
        "500":
          description: 'Internal server error" example {"error": "internal server
            error"}'
          schema:
            $ref: '#/definitions/kit.ErrorResponse'
      summary: Registers a new user
      tags:
      - user
  /status:
    get:
      description: Provides the status of the service
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Provides the status of the service
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
